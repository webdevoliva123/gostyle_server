(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.ValidatePassword = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function ValidatePassword(e){this.options=e}function hasLowerCase(e){return e.toUpperCase()!==e}function hasUpperCase(e){return e.toLowerCase()!==e}function hasSpecialChars(e){return/[~`!@#$%\^&*+=\-\[\]\\';,\/{}|\\":<>\?]/g.test(e)}function hasNumber(e){return/[0-9]/.test(e)}function checkForbiddenStrings(e,a){var r={value:!1,foundString:""},s=e.toUpperCase();return r.value=a.some(function(e){var a=s.indexOf(e.toUpperCase())>-1;return a&&(r.foundString=e),a}),r}module.exports=ValidatePassword,"function"!=typeof Object.assign&&!function(){Object.assign=function(e){"use strict";if(void 0===e||null===e)throw new TypeError("Cannot convert undefined or null to object");for(var a=Object(e),r=1;r<arguments.length;r++){var s=arguments[r];if(void 0!==s&&null!==s)for(var n in s)s.hasOwnProperty(n)&&(a[n]=s[n])}return a}}(),ValidatePassword.prototype.checkPassword=function(e,a){var r,s={isValid:!0,validationMessage:"The password must contain at least one "},n={enforce:{lowercase:!0,uppercase:!0,specialCharacters:!0,numbers:!0}},t=Object.assign(n,this.options);return e?!hasLowerCase(e)&&t.enforce.lowercase?(s.validationMessage+="lowercase letter",s.isValid=!1,s):!hasUpperCase(e)&&t.enforce.uppercase?(s.validationMessage+="uppercase letter",s.isValid=!1,s):!hasSpecialChars(e)&&t.enforce.specialCharacters?(s.validationMessage+="special character",s.isValid=!1,s):!hasNumber(e)&&t.enforce.numbers?(s.validationMessage+="number",s.isValid=!1,s):"undefined"!=typeof a&&(r=checkForbiddenStrings(e,a),r.value)?(s.isValid=!1,s.validationMessage="The password cannot contain "+r.foundString,s):s:s};
},{}]},{},[1])(1)
});